plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id "org.gradlex.extra-java-module-info"  version "1.8"
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'com.project'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.0'
}

extraJavaModuleInfo {
    failOnMissingModuleInfo = false

    module('org.eclipse.lsp4j.jsonrpc-0.23.1.jar', 'org.eclipse.lsp4j.jsonrpc') {
        exportAllPackages()
    }
    module('org.eclipse.lsp4j-0.23.1.jar', 'org.eclipse.lsp4j') {
        requires 'org.eclipse.lsp4j.jsonrpc'
        exportAllPackages()
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.project.javaeditor'
    mainClass = 'com.project.javaeditor.HelloApplication'
}

javafx {
    version = '22.0.1'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.swing']
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.2')
    implementation('com.dlsc.formsfx:formsfx-core:11.6.0') {
        exclude(group: 'org.openjfx')
    }
    implementation('net.synedra:validatorfx:0.4.0') {
        exclude(group: 'org.openjfx')
    }

    implementation('org.eclipse.jdt:org.eclipse.jdt.core:3.38.0')
    implementation('org.eclipse.lsp4j:org.eclipse.lsp4j:0.23.1')
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.23.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.23.1'
    implementation group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.11.3'
    implementation group: 'org.kordamp.ikonli', name: 'ikonli-javafx', version: '12.3.1'
    implementation group: 'org.kordamp.ikonli', name: 'ikonli-fontawesome5-pack', version: '12.3.1'
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-params:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

}

configurations.configureEach {
    exclude group: 'org.eclipse.jdt', module: 'org.eclipse.jdt.core'
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${getLayout().getBuildDirectory()}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}

tasks.register('runJLS', JavaExec) {
    group = 'Language Server'
    description = 'Run the JDT Language Server'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = '-jar'
    args = configurations.runtimeClasspath.find { it.name.contains("org.eclipse.jdt.ls.core") }
}